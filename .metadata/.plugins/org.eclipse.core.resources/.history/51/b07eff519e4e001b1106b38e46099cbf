1. Vilka atributter ha klassen applicant?
	name och grades
Finns det något i klassen du måste implementera för att göra den komplett?
	getAvgGrade metoden
2. Vad är tanken med FindBestCandidate och FileReader?
	FileReader läser in filer, FindBestCanditate sortera kanditerna efter betyg och printer dem som har över 4
4. Kan du se att konstruktern i klassen Applicant redan har kod som fixar detta?
	Ja
På vilka rader hittar du det som tolkar betygen och översätter dem till heltalsvärden?
	I metoden parseGrades rad: 26 och 28
Vad heter attributet i vilket heltalsbetygen ligger lagrade?
	grades[]
8. Hur blir utskriften av resultaten från readFromFile()?
	Det blir en beskrivning av själva objektet: [Lrekrytering.Applicant;@14ae5a5
	Och alltså inte innehållet i själva objektet
11. Varför är det bra att änvända konstanter på ett ställe, och sen bara använda sig av namnet?
	Det finns bara ett ställe att ändra värden av konstanten. DO NO REPEAT YOURSELF är ett gott maxim
12. Testa med olika värde för MIN_AVG_GRADE
	Funktionen fungerar
13. Vad händte om man satte parametren nbrOfRows till 30, i FindBestCandidate?
	Om antal rader som ska läsas blev större än antal rader i filen, förskökte programmet att anropa obj som inte fanns
	Löste det genom att räkna hur många rader det finns i filen innan det färdiga applicants[] obj skapas
14. Vad hände om du läser in den stora filen?
	Fik numberFormatException for input string "A". ParseInt fel,
15. Det har inte varit tydligt hur betygen ska anges och det har varit möjligt
att helt enkelt mata in lite allt möjligt i fälten avsedda för betyg. Anteckna nedan: vilka
problem finns det med indata och vilka är dina förslag på hur det skulle kunna lösas?
	Indatan, särskilt om man betygen underkänd, skriv inte på samma sätt varje gång. När datan blev intastet
	borde programmat ha säkerstället att det va samma. U= underkänd, eller 0 = underkänd. Bara man gorde detsamma hela vägen.
	Man kan också läsa in felslag som betyget noll, eller anta om folk inte kan skriva in rätt, är de inte smarte nog till
	att jobba för mitt företag.
17. Funderingar eller kommentarer
	Föredrar att sorteringen är descending. Så implementerade detta med Collections.reversOrder()
	Det återstår ingen problem omedelbart
	
	Hur skulle man lagra datan utanför kursen? Eftersom det kräver mycket minne att lagra i en array.
	Man skulle kunna skriva till en ny fil, så datan lagras på disk istället för RAM'en. 

18. Kommentera på lösningar till algoritmerna
	Bo Ali: Hade bra betyg men hade missförstått data inputet.
			Borde löses vid input delen av applikationen, inte vid själva utväljingen. 
			Det skall alltså säkerställes att man bara fär intaste lagliga betyg.
			Kan också löses genom att sätta A = 5, B = 4, C = 3 och else = 0.
	Rasmus Andreasson: Hade inte löst sista kursen pga. utlandsstudier.
			Han borde skriva inn betyget för det liknande kursen.
	Rut Andreason: Fick bra betyg i början men löste inte de svära momenten
			Det är väl dem man vill skilja från? Dem som inte gjorde det bra
	Bosse Larson: Fick bra betyg till slut.
			Man kunde ge de sista två kurserna en störra vikt. Så de betyder mer, efter som det nog är
			de färdigheterna på de svåra kursen man kommer andvända mest
	Alice Abrahamsson 5,5,3,5,5 //Toppstudent som gick igenom en svår kris privat under en termin. Lyckades trots detta nå godkänt
			Om man bara väljer på betyg är det en svår problemställning. Om man också väljer på andra färdigheter
			kan det löses med en samtal
	Sandra Nilsson 5,5,5 //Hoppat av programmet? 
			Det är väl också dem vi vill sortera fra.
	Per Persson 3,U,3,44,3 //Skrivfel?
			Borde löses i input delen av programmet. Det borde inte vara möjligt att intaste olaglig data. 	
	
	